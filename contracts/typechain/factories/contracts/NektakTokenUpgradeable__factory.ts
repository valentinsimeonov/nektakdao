/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NektakTokenUpgradeable,
  NektakTokenUpgradeableInterface,
} from "../../contracts/NektakTokenUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "increasedSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "ERC20ExceededSafeSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "clock",
        type: "uint48",
      },
    ],
    name: "ERC5805FutureLookup",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC6372InconsistentClock",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "VotesExpiredSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotes",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "_key",
            type: "uint48",
          },
          {
            internalType: "uint208",
            name: "_value",
            type: "uint208",
          },
        ],
        internalType: "struct Checkpoints.Checkpoint208",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612b51620001005f395f81816110bc015281816110e501526112240152612b515ff3fe6080604052600436106101d0575f3560e01c806370a08231116100fd5780639ab24eb011610092578063d505accf11610062578063d505accf1461057c578063dd62ed3e1461059b578063f1127ed8146105ba578063f2fde38b14610605575f80fd5b80639ab24eb0146104ef578063a9059cbb1461050e578063ad3cb1cc1461052d578063c3cda5201461055d575f80fd5b80638da5cb5b116100cd5780638da5cb5b146104555780638e539e8c1461049157806391ddadf4146104b057806395d89b41146104db575f80fd5b806370a08231146103dc578063715018a6146103fb5780637ecebe001461040f57806384b0196e1461042e575f80fd5b806340c10f191161017357806352d1902d1161014357806352d1902d1461033e578063587cde1e146103525780635c19a95c146103895780636fcfff45146103a8575f80fd5b806340c10f19146102d75780634bf5d7e9146102f85780634cd88b761461030c5780634f1ef2861461032b575f80fd5b806323b872dd116101ae57806323b872dd1461026a578063313ce567146102895780633644e515146102a45780633a46b1a8146102b8575f80fd5b806306fdde03146101d4578063095ea7b3146101fe57806318160ddd1461022d575b5f80fd5b3480156101df575f80fd5b506101e8610624565b6040516101f5919061246c565b60405180910390f35b348015610209575f80fd5b5061021d610218366004612499565b6106c9565b60405190151581526020016101f5565b348015610238575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016101f5565b348015610275575f80fd5b5061021d6102843660046124c1565b6106e2565b348015610294575f80fd5b50604051601281526020016101f5565b3480156102af575f80fd5b5061025c610707565b3480156102c3575f80fd5b5061025c6102d2366004612499565b610715565b3480156102e2575f80fd5b506102f66102f1366004612499565b610760565b005b348015610303575f80fd5b506101e8610776565b348015610317575f80fd5b506102f661032636600461259f565b6107ee565b6102f66103393660046125ff565b61090b565b348015610349575f80fd5b5061025c610926565b34801561035d575f80fd5b5061037161036c366004612653565b610941565b6040516001600160a01b0390911681526020016101f5565b348015610394575f80fd5b506102f66103a3366004612653565b61096a565b3480156103b3575f80fd5b506103c76103c2366004612653565b610975565b60405163ffffffff90911681526020016101f5565b3480156103e7575f80fd5b5061025c6103f6366004612653565b61097f565b348015610406575f80fd5b506102f66109af565b34801561041a575f80fd5b5061025c610429366004612653565b6109c2565b348015610439575f80fd5b506104426109cc565b6040516101f5979695949392919061266c565b348015610460575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610371565b34801561049c575f80fd5b5061025c6104ab366004612703565b610a7a565b3480156104bb575f80fd5b506104c4610aaf565b60405165ffffffffffff90911681526020016101f5565b3480156104e6575f80fd5b506101e8610ab8565b3480156104fa575f80fd5b5061025c610509366004612653565b610af6565b348015610519575f80fd5b5061021d610528366004612499565b610b44565b348015610538575f80fd5b506101e8604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610568575f80fd5b506102f661057736600461272a565b610b51565b348015610587575f80fd5b506102f661059636600461277e565b610c04565b3480156105a6575f80fd5b5061025c6105b53660046127e3565b610d1d565b3480156105c5575f80fd5b506105d96105d4366004612814565b610d66565b60408051825165ffffffffffff1681526020928301516001600160d01b031692810192909252016101f5565b348015610610575f80fd5b506102f661061f366004612653565b610d83565b60605f5f80516020612abc8339815191525b905080600301805461064790612851565b80601f016020809104026020016040519081016040528092919081815260200182805461067390612851565b80156106be5780601f10610695576101008083540402835291602001916106be565b820191905f5260205f20905b8154815290600101906020018083116106a157829003601f168201915b505050505091505090565b5f336106d6818585610dc0565b60019150505b92915050565b5f336106ef858285610dd2565b6106fa858585610e36565b60019150505b9392505050565b5f610710610e93565b905090565b5f5f80516020612a9c83398151915261074f61073084610e9c565b6001600160a01b0386165f908152600184016020526040902090610eea565b6001600160d01b0316949350505050565b610768610f9a565b6107728282610ff5565b5050565b6060610780611029565b65ffffffffffff16610790610aaf565b65ffffffffffff16146107b6576040516301bfc1c560e61b815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b5f6107f7611033565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561081e5750825b90505f8267ffffffffffffffff16600114801561083a5750303b155b905081158015610848575080155b156108665760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561089057845460ff60401b1916600160401b1785555b61089a878761105b565b6108a38761106d565b6108ab611098565b6108b4336110a0565b6108bc611098565b831561090257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6109136110b1565b61091c82611155565b610772828261115d565b5f61092f611219565b505f80516020612afc83398151915290565b6001600160a01b039081165f9081525f80516020612a9c83398151915260205260409020541690565b336107728183611262565b5f6106dc826112e9565b5f805f80516020612abc8339815191525b6001600160a01b039093165f9081526020939093525050604090205490565b6109b7610f9a565b6109c05f611338565b565b5f6106dc826113a8565b5f60608082808083815f80516020612adc83398151915280549091501580156109f757506001810154155b610a405760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610a486113b2565b610a506113f0565b604080515f80825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b5f5f80516020612a9c833981519152610a9f610a9584610e9c565b6002830190610eea565b6001600160d01b03169392505050565b5f610710611029565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612abc8339815191529161064790612851565b6001600160a01b0381165f9081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d01602052604081205f80516020612a9c83398151915290610a9f90611406565b5f336106d6818585610e36565b83421115610b7557604051632341d78760e11b815260048101859052602401610a37565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590525f90610bee90610be69060a0016040516020818303038152906040528051906020012061143d565b858585611469565b9050610bfa8187611495565b6109028188611262565b83421115610c285760405163313c898160e11b815260048101859052602401610a37565b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c568c6114d3565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f610cb08261143d565b90505f610cbf82878787611469565b9050896001600160a01b0316816001600160a01b031614610d06576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610a37565b610d118a8a8a610dc0565b50505050505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b604080518082019091525f80825260208201526107008383611514565b610d8b610f9a565b6001600160a01b038116610db457604051631e4fbdf760e01b81525f6004820152602401610a37565b610dbd81611338565b50565b610dcd838383600161157d565b505050565b5f610ddd8484610d1d565b90505f19811015610e305781811015610e2257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610a37565b610e3084848484035f61157d565b50505050565b6001600160a01b038316610e5f57604051634b637e8f60e11b81525f6004820152602401610a37565b6001600160a01b038216610e885760405163ec442f0560e01b81525f6004820152602401610a37565b610dcd838383611661565b5f61071061166c565b5f80610ea6610aaf565b90508065ffffffffffff168310610ee157604051637669fc0f60e11b81526004810184905265ffffffffffff82166024820152604401610a37565b610700836116df565b81545f9081816005811115610f46575f610f0384611715565b610f0d908561289d565b5f8881526020902090915081015465ffffffffffff9081169087161015610f3657809150610f44565b610f418160016128b0565b92505b505b5f610f5387878585611868565b90508015610f8d57610f7787610f6a60018461289d565b5f91825260209091200190565b54600160301b90046001600160d01b0316610f8f565b5f5b979650505050505050565b33610fcc7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146109c05760405163118cdaa760e01b8152336004820152602401610a37565b6001600160a01b03821661101e5760405163ec442f0560e01b81525f6004820152602401610a37565b6107725f8383611661565b5f610710436116df565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106dc565b6110636118c7565b61077282826118ec565b6110756118c7565b610dbd81604051806040016040528060018152602001603160f81b81525061193c565b6109c06118c7565b6110a86118c7565b610dbd8161199b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061113757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661112b5f80516020612afc833981519152546001600160a01b031690565b6001600160a01b031614155b156109c05760405163703e46dd60e11b815260040160405180910390fd5b610dbd610f9a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111b7575060408051601f3d908101601f191682019092526111b4918101906128c3565b60015b6111df57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610a37565b5f80516020612afc833981519152811461120f57604051632a87526960e21b815260048101829052602401610a37565b610dcd83836119a3565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109c05760405163703e46dd60e11b815260040160405180910390fd5b5f80516020612a9c8339815191525f61127a84610941565b6001600160a01b038581165f8181526020869052604080822080546001600160a01b031916898616908117909155905194955093928516927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e3081846112e4876119f8565b611a02565b6001600160a01b0381165f9081527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0160205260408120545f80516020612a9c8339815191529061070090611b78565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6106dc82611ba8565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060915f80516020612adc8339815191529161064790612851565b60605f5f80516020612adc833981519152610636565b80545f9080156114355761141f83610f6a60018461289d565b54600160301b90046001600160d01b0316610700565b5f9392505050565b5f6106dc611449610e93565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061147988888888611bd0565b9250925092506114898282611c98565b50909695505050505050565b5f61149f836114d3565b9050808214610dcd576040516301d4b62360e61b81526001600160a01b038416600482015260248101829052604401610a37565b6001600160a01b03165f9081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805180820182525f80825260208083018290526001600160a01b03861682527fe8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d019052919091205f80516020612a9c833981519152906115759084611d50565b949350505050565b5f80516020612abc8339815191526001600160a01b0385166115b45760405163e602df0560e01b81525f6004820152602401610a37565b6001600160a01b0384166115dd57604051634a1406b160e11b81525f6004820152602401610a37565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561165a57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161165191815260200190565b60405180910390a35b5050505050565b610dcd838383611dbd565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611696611e42565b61169e611eaa565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b5f65ffffffffffff821115611711576040516306dfcc6560e41b81526030600482015260248101839052604401610a37565b5090565b5f60018211611722575090565b816001600160801b821061173b5760809190911c9060401b5b600160401b82106117515760409190911c9060201b5b64010000000082106117685760209190911c9060101b5b62010000821061177d5760109190911c9060081b5b61010082106117915760089190911c9060041b5b601082106117a45760049190911c9060021b5b600482106117b05760011b5b600302600190811c908185816117c8576117c86128da565b048201901c905060018185816117e0576117e06128da565b048201901c905060018185816117f8576117f86128da565b048201901c90506001818581611810576118106128da565b048201901c90506001818581611828576118286128da565b048201901c90506001818581611840576118406128da565b048201901c905061185f818581611859576118596128da565b04821190565b90039392505050565b5f5b818310156118bf575f61187d8484611eec565b5f8781526020902090915065ffffffffffff86169082015465ffffffffffff1611156118ab578092506118b9565b6118b68160016128b0565b93505b5061186a565b509392505050565b6118cf611f06565b6109c057604051631afcd79f60e31b815260040160405180910390fd5b6118f46118c7565b5f80516020612abc8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361192d8482612932565b5060048101610e308382612932565b6119446118c7565b5f80516020612adc8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261197d8482612932565b506003810161198c8382612932565b505f8082556001909101555050565b610d8b6118c7565b6119ac82611f1f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156119f057610dcd8282611f82565b610772611ff4565b5f6106dc8261097f565b5f80516020612a9c8339815191526001600160a01b0384811690841614801590611a2b57505f82115b15610e30576001600160a01b03841615611ad4576001600160a01b0384165f90815260018201602052604081208190611a6f90612013611a6a8761201e565b612051565b6001600160d01b031691506001600160d01b03169150856001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611ac9929190918252602082015260400190565b60405180910390a250505b6001600160a01b03831615610e30576001600160a01b0383165f90815260018201602052604081208190611b0e90612089611a6a8761201e565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611b68929190918252602082015260400190565b60405180910390a2505050505050565b5f63ffffffff821115611711576040516306dfcc6560e41b81526020600482015260248101839052604401610a37565b5f807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610990565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611c0957505f91506003905082611c8e565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611c5a573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611c8557505f925060019150829050611c8e565b92505f91508190505b9450945094915050565b5f826003811115611cab57611cab6129f2565b03611cb4575050565b6001826003811115611cc857611cc86129f2565b03611ce65760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611cfa57611cfa6129f2565b03611d1b5760405163fce698f760e01b815260048101829052602401610a37565b6003826003811115611d2f57611d2f6129f2565b03610772576040516335e2f38360e21b815260048101829052602401610a37565b604080518082019091525f8082526020820152825f018263ffffffff1681548110611d7d57611d7d612a06565b5f9182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b611dc8838383612094565b6001600160a01b038316611e37575f611dff7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90506001600160d01b0380821115611e3457604051630e58ae9360e11b81526004810183905260248101829052604401610a37565b50505b610dcd8383836121cd565b5f5f80516020612adc83398151915281611e5a6113b2565b805190915015611e7257805160209091012092915050565b81548015611e81579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b5f5f80516020612adc83398151915281611ec26113f0565b805190915015611eda57805160209091012092915050565b60018201548015611e81579392505050565b5f611efa6002848418612a1a565b610700908484166128b0565b5f611f0f611033565b54600160401b900460ff16919050565b806001600160a01b03163b5f03611f5457604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610a37565b5f80516020612afc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611f9e9190612a39565b5f60405180830381855af49150503d805f8114611fd6576040519150601f19603f3d011682016040523d82523d5f602084013e611fdb565b606091505b5091509150611feb85838361223e565b95945050505050565b34156109c05760405163b398979f60e01b815260040160405180910390fd5b5f6107008284612a54565b5f6001600160d01b03821115611711576040516306dfcc6560e41b815260d0600482015260248101839052604401610a37565b5f8061207c61205e610aaf565b61207461206a88611406565b868863ffffffff16565b87919061229a565b915091505b935093915050565b5f6107008284612a7b565b5f80516020612abc8339815191526001600160a01b0384166120ce5781816002015f8282546120c391906128b0565b9091555061213e9050565b6001600160a01b0384165f90815260208290526040902054828110156121205760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610a37565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661215c57600281018054839003905561217a565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121bf91815260200190565b60405180910390a350505050565b5f80516020612a9c8339815191526001600160a01b0384166121ff576121fc81600201612089611a6a8561201e565b50505b6001600160a01b0383166122235761222081600201612013611a6a8561201e565b50505b610e3061222f85610941565b61223885610941565b84611a02565b6060826122535761224e826122a7565b610700565b815115801561226a57506001600160a01b0384163b155b1561229357604051639996b31560e01b81526001600160a01b0385166004820152602401610a37565b5080610700565b5f8061207c8585856122cf565b8051156122b657805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b82545f90819080156123c5575f6122eb87610f6a60018561289d565b805490915065ffffffffffff80821691600160301b90046001600160d01b031690881682111561232e57604051632520601d60e01b815260040160405180910390fd5b8765ffffffffffff168265ffffffffffff160361236757825465ffffffffffff16600160301b6001600160d01b038916021783556123b7565b6040805180820190915265ffffffffffff808a1682526001600160d01b03808a1660208085019182528d54600181018f555f8f81529190912094519151909216600160301b029216919091179101555b945085935061208192505050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a555f8a815291822095519251909316600160301b029190931617920191909155905081612081565b5f5b83811015612439578181015183820152602001612421565b50505f910152565b5f815180845261245881602086016020860161241f565b601f01601f19169290920160200192915050565b602081525f6107006020830184612441565b80356001600160a01b0381168114612494575f80fd5b919050565b5f80604083850312156124aa575f80fd5b6124b38361247e565b946020939093013593505050565b5f805f606084860312156124d3575f80fd5b6124dc8461247e565b92506124ea6020850161247e565b9150604084013590509250925092565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff80841115612528576125286124fa565b604051601f8501601f19908116603f01168101908282118183101715612550576125506124fa565b81604052809350858152868686011115612568575f80fd5b858560208301375f602087830101525050509392505050565b5f82601f830112612590575f80fd5b6107008383356020850161250e565b5f80604083850312156125b0575f80fd5b823567ffffffffffffffff808211156125c7575f80fd5b6125d386838701612581565b935060208501359150808211156125e8575f80fd5b506125f585828601612581565b9150509250929050565b5f8060408385031215612610575f80fd5b6126198361247e565b9150602083013567ffffffffffffffff811115612634575f80fd5b8301601f81018513612644575f80fd5b6125f58582356020840161250e565b5f60208284031215612663575f80fd5b6107008261247e565b60ff60f81b881681525f602060e0602084015261268c60e084018a612441565b838103604085015261269e818a612441565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b818110156126f1578351835292840192918401916001016126d5565b50909c9b505050505050505050505050565b5f60208284031215612713575f80fd5b5035919050565b803560ff81168114612494575f80fd5b5f805f805f8060c0878903121561273f575f80fd5b6127488761247e565b955060208701359450604087013593506127646060880161271a565b92506080870135915060a087013590509295509295509295565b5f805f805f805f60e0888a031215612794575f80fd5b61279d8861247e565b96506127ab6020890161247e565b955060408801359450606088013593506127c76080890161271a565b925060a0880135915060c0880135905092959891949750929550565b5f80604083850312156127f4575f80fd5b6127fd8361247e565b915061280b6020840161247e565b90509250929050565b5f8060408385031215612825575f80fd5b61282e8361247e565b9150602083013563ffffffff81168114612846575f80fd5b809150509250929050565b600181811c9082168061286557607f821691505b60208210810361288357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106dc576106dc612889565b808201808211156106dc576106dc612889565b5f602082840312156128d3575f80fd5b5051919050565b634e487b7160e01b5f52601260045260245ffd5b601f821115610dcd57805f5260205f20601f840160051c810160208510156129135750805b601f840160051c820191505b8181101561165a575f815560010161291f565b815167ffffffffffffffff81111561294c5761294c6124fa565b6129608161295a8454612851565b846128ee565b602080601f831160018114612993575f841561297c5750858301515b5f19600386901b1c1916600185901b1785556129ea565b5f85815260208120601f198616915b828110156129c1578886015182559484019460019091019084016129a2565b50858210156129de57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f82612a3457634e487b7160e01b5f52601260045260245ffd5b500490565b5f8251612a4a81846020870161241f565b9190910192915050565b6001600160d01b03828116828216039080821115612a7457612a74612889565b5092915050565b6001600160d01b03818116838216019080821115612a7457612a7461288956fee8b26c30fad74198956032a3533d903385d56dd795af560196f9c78d4af40d0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220fe183caef7c8ff01cb2b199fc7cdc81e40ca38f9d8d8c768f09b24e0c4b54ccc64736f6c63430008180033";

type NektakTokenUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NektakTokenUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NektakTokenUpgradeable__factory extends ContractFactory {
  constructor(...args: NektakTokenUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NektakTokenUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NektakTokenUpgradeable__factory {
    return super.connect(runner) as NektakTokenUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NektakTokenUpgradeableInterface {
    return new Interface(_abi) as NektakTokenUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NektakTokenUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NektakTokenUpgradeable;
  }
}
